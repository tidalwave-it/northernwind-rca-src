<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  *********************************************************************************************************************

  NorthernWind
  %%
  Copyright (C) 2013 - 2021 Tidalwave s.a.s. (http://tidalwave.it)
  %%
  *********************************************************************************************************************

  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations under the License.

  *********************************************************************************************************************

  $Id$

*********************************************************************************************************************
#L%
--><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.northernwind.rca</groupId>
        <artifactId>northernwind-rca</artifactId>
        <version>1.2-ALPHA-3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <!-- ===============================================================================================================

        This is the "Modules POM" of the project. It is an intermediate-level POM, just below the "Master POM", which
        takes care of everything we need for used dependencies: declare their versions with a <dependencyManagement>
        section. This POM includes, one by one, all the actual modules of the project.

    ================================================================================================================ -->

    <groupId>it.tidalwave.northernwind.rca</groupId>
    <artifactId>northernwind-rca-modules</artifactId>
    <version>1.2-ALPHA-3-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Zephyr (modules)</name>
    <description>The parent POM of all modules.</description>

    <!-- ===============================================================================================================

        Here you declare some properties defining the version of dependencies used by this project. All dependencies
        for all modules must be enumerated, and specified below in the <dependencyManagement> section.

    ================================================================================================================ -->
    <properties>
        <tft.javac.source>11</tft.javac.source>
        <tft.javac.target>11</tft.javac.target>
        <tft.javac.release>11</tft.javac.release>

        <activation.version>1.1.1</activation.version>
        <aquafx.version>0.2</aquafx.version>
        <jaxb.version>2.2.11</jaxb.version>
        <jetty.version>8.1.10.v20130312</jetty.version>
        <jsoup.version>1.8.3</jsoup.version>
        <netbeans.version>RELEASE80</netbeans.version>
        <northernwind.version>1.2-ALPHA-6</northernwind.version>
        <tft.spring.version>5.3.1</tft.spring.version>
        <steelblue.version>1.1-ALPHA-1</steelblue.version>
        <!-- Should activate by itself with JDK 11+, but it fails with Jenkins Maven integration. -->
        <tft.javafx.version>11.0.1</tft.javafx.version>
        <thesefoolishthings.version>3.2-ALPHA-8</thesefoolishthings.version>

        <tft.appbundle.name>Zephyr</tft.appbundle.name>
        <tft.appbundle.signature>TDLW</tft.appbundle.signature>
        <tft.javafx.vmargs>-Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8</tft.javafx.vmargs>
        <tft.test.maxMemory>1024M</tft.test.maxMemory>
    </properties>

    <!-- ===============================================================================================================

    ================================================================================================================ -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${tft.spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>thesefoolishthings</artifactId>
                <version>${thesefoolishthings.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.steelblue</groupId>
                <artifactId>steelblue</artifactId>
                <version>${steelblue.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.northernwind</groupId>
                <artifactId>northernwind</artifactId>
                <version>${northernwind.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.superpom</groupId>
                <artifactId>platform</artifactId>
                <version>${netbeans.version}-1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${activation.version}</version>
            </dependency>

            <!-- Should activate by itself with JDK 11+, but it fails with Jenkins Maven integration. -->
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-base</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-graphics</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-web</artifactId>
                <version>${tft.javafx.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version> <!-- FIXME -->
            </dependency>

            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aquafx-project</groupId>
                <artifactId>aquafx</artifactId>
                <version>${aquafx.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- ===============================================================================================================

    ================================================================================================================ -->
    <dependencies>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Keep this before the mockito-all dependency - see http://stackoverflow.com/questions/15833015/ -->
<!--        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>-->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- ===============================================================================================================

    ================================================================================================================ -->
    <modules>
        <module>CommonsUI</module>
        <module>ContentEditor</module>
        <module>ContentExplorer</module>
        <module>ContentManager</module>
        <module>EmbeddedServer</module>
        <module>Model</module>
        <module>JavaFXApplication</module>
        <module>JavaFXUI</module>
        <module>SiteOpener</module>
        <module>StrippedCoreImplementation</module>
        <module>StructureExplorer</module>
        <module>StructureEditor</module>
    </modules>

    <!-- ===============================================================================================================

    ================================================================================================================ -->
    <profiles>
        <profile>
            <id>installers</id>
            <modules>
                <module>Installers/macOS</module>
            </modules>
        </profile>
    </profiles>

</project>
